options.header=OPTIONS:
invalid.options=Invalid usage: use droid -h to print the options.
help.help=Display this help.  More help is available using the help menu in the graphical user interface.
version.help=Displays the version of the DROID software.
export.help=Export the specified profiles as a single CSV file.  If any filters are specified, then they will apply to the exported file.  \nFor example: droid -p "C:\\Results\\result1.droid" "C:\\Results\\result2.droid" -e "C:\\Exports\combinedResults.csv" \n droid -p "C:\\Results\\result3.droid" -f "PUID any_of fmt/111 fmt/112" -e "C:\\Exports\\filteredResults.csv"
profiles.help=When used in conjunction with reporting, filtering or exporting, -p specifies a list of profiles to open.\
The file paths of the profiles should be given surrounded in double quotes, and separated by spaces from each other.\
When used in conjunction with the -a option, the results of the new profile will be saved to that file, and you can only specify a single file.\
\n For example: droid -p "C:\\Results\\result1.droid" "C:\\Results\\result2.droid" -e "C:\\Exports\combinedResults.csv" \n\
droid -a "C:\\Files\\A Folder" "C:\\Files\\file.xxx" -p "C:\\Results\\result1.droid"
report.help=Saves the report generated to the file specified.  For example:\n  droid -p "C:\\Results\\result1.droid" -n "PLANETS" -r "C:\\Reports\\result1Report.xml"
report.name.help=Runs the report with the specified name on any profiles opened using the -p option.  For example:\n droid -p "C:\Results\\result1.droid" -n "PLANETS" -r "C:\\Reports\\result1Report.xml"
all.filter.help=Filter the profiles specified using the -p option.  Only results which match ALL filter criteria specified will appear.  Filter criteria are specified using the following method: <field><operator><values> where <field> is the name of a filterable field, <operator> is the type of comparison to use, and <values> are the value or values against which the field value should be compared. The -k option provides information on the available fields and operators.  You can specify more than one filter criteria, surrounded in double quotes and separated by spaces from each other.  For example:\
     \n droid -p "C:\\Results\\result3.droid" \n -f "PUID any_of fmt/111 fmt/112" \n -e "C:\\Exports\\filteredResults.csv"\
     droid \n -p "C:\\Results\\result1.droid" "C:\\Results\\result2.droid" \n -f "file_size > 0" \n -e "C:\\Exports\\filteredCombinedResults.csv"
any.filter.help=Filter profiles as the -f option does, except results which match ANY of the specified filter criteria will appear.

filter.field.help=Lists the available fields to use in filters and the operators which can be used with them.
profile.run.help=Adds resources to a new profile and runs it.  Resources are the file path of any file or folder you want to profile.  The file paths should be given surrounded in double quotes, and separated by spaces from each other.  The profile results will be saved to a single file specified using the -p option. \n For example: droid -a "C:\\Files\\A Folder" "C:\\Files\\file.xxx" -p "C:\\Results\\result1.droid" \n Note: You cannot use reporting, filtering and exporting when using the -a option.
recurse.help=Recurse into all subfolders of any folder specified using the -a option.\
If this option is not specified, only the files directly under a folder will be processed.\
If -R is specified, files in all sub-folders (and their sub-folders, and so on) will be processed as well.\
For example: \n droid -R -a "C:\\Files\\Another Folder" -p "C:\\Results\\result3.droid"
quiet.help=DROID will limit its console output to errors only.

dql.help.FILE_EXTENSION=The file extension (e.g. 'exe')
dql.help.FILE_NAME=The name of the resource (e.g. 'system.dll')
dql.help.FILE_SIZE=The file size in bytes (e.g. 150000)
dql.help.LAST_MODIFIED_DATE=The last modifed date of the file ( yyyy-MM-dd )
dql.help.RESOURCE_TYPE=The type of resource ( File | Folder | Container )
dql.help.IDENTIFICATION_METHOD=How the file was identified ( ext | bin )
dql.help.IDENTIFICATION_STATUS=The identification job status ( not_done | done | problem )
dql.help.PUID=The PUID identified (e.g. x-fmt/101)
dql.help.FILE_FORMAT=The file format description (text)
dql.help.MIME_TYPE=The mime-type of the identification

signature_update.check.help=Check for signature updates, but does not download them.  
signature_update.check.unavailable=No signature updates are available
signature_update.check.success=Signature update version {0} is available
signature_update.check.error=Error checking for signature update: {0}\nCaused by {1}: {2}

signature_update.download.help=Download the latest signature updates, if a newer version is available.  
signature_update.download.success=Signature update version {0} has been downloaded
signature_update.download.error=Error downloading signature updates: {0}\nCaused by {1}: {2}

signature.display_default.help=Displays the current default signature file.
signature.display=Version: {0}  File name: {1}
signature.configure_default.help=Sets the current default signature file version.  For example:\n droid -s 42
signature.configure_default.success=Default signature file updated. Version: {0}  File name: {1}
signature.configure_default.invalid=Unknown signature file version: {0}
signature.list_all.help=Lists all locally available signature files.
signature.none=No signature files available

version=version
